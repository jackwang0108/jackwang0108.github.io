<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo博客编写攻略</title>
    <url>/2025/06/28/Hexo%E5%8D%9A%E5%AE%A2%E7%BC%96%E5%86%99%E6%94%BB%E7%95%A5/</url>
    <content><![CDATA[<blockquote>
<p>本文介绍了如何使用Hexo编写博客</p>
</blockquote>
<p><img src="https://jack-1307599355.cos.ap-shanghai.myqcloud.com/image-20250628181325661.png" alt="工欲善其事，必先利其器" style="zoom:50%;"></p>
<h1 id="hexo博客编写攻略">Hexo博客编写攻略</h1>
<h2 id="hexo-标准文章编写流程">1. Hexo 标准文章编写流程</h2>
<h3 id="新建文章">1.1 新建文章</h3>
<p><code>hexo</code>官网中介绍的创建新的文章的命令如下：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new <span class="token operator">&lt;</span>title<span class="token operator">&gt;</span>
tree source/_posts<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>该命令会在 <code>source/_posts</code> 目录下创建一个名为
<code>&lt;title&gt;.md</code> 的文件，即我们要编写的文章。</p>
<p><img src="https://jack-1307599355.cos.ap-shanghai.myqcloud.com/image-20250628182634059.png" alt="创建新的文章" style="zoom:33%;"></p>
<h3 id="编译文章">1.2 编译文章</h3>
<p>而后当我们使用如下的命令编译 <code>markdown</code>
文件时，<code>hexo</code>会将编译得到<code>HTML</code>文件输出到
<code>public</code> 目录下：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo generate
tree public <span class="token parameter variable">-D</span> <span class="token parameter variable">--level</span> <span class="token number">4</span> <span class="token parameter variable">-I</span> <span class="token string">"libs|js|medias|tags|css|categories"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p><img src="https://jack-1307599355.cos.ap-shanghai.myqcloud.com/image-20250628183009921.png" alt="使用hexo generate编译markdown文章" style="zoom: 33%;"></p>
<h3 id="发布文章">1.3 发布文章</h3>
<p>最后使用如下的命令发布文章：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>具体而言，<code>hexo deploy</code>将会把 <code>public</code>
目录下所有<code>HTML/CSS/JavaScript</code>文件<code>push</code>到 <a href="https://so.csdn.net/so/search?q=GitHub&amp;spm=1001.2101.3001.7020">GitHub</a>，从而完成分布。</p>
<p><img src="https://jack-1307599355.cos.ap-shanghai.myqcloud.com/image-20250628183424670.png" alt="使用hexo deploy发布文章" style="zoom: 25%;"></p>
<h2 id="使用草稿编写文章">2. 使用草稿编写文章</h2>
<p>上面介绍了标准的 Hexo 文章编写流程，但这种方式有一个重大缺点：</p>
<ul>
<li>如果我们同时在编辑多篇文章，如果我们只完成了其中一篇文章，在
<code>hexo deploy</code>的时候会把所有文章一起部署到
<code>GitHub</code></li>
<li><strong>也就是说，通过标准方式编写、发布文章的话，我们尚未完成的文章也会被发布出去</strong></li>
</ul>
<p>因此，<code>Hexo</code>提供了草稿机制，允许我们在完成文章之前先将其保存为草稿，等到完成后再发布。</p>
<h3 id="新建草稿">2.1 新建草稿</h3>
<p>使用如下命令，新建一个草稿：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new draft <span class="token operator">&lt;</span>title<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>而后在 <code>source/_drafts</code> 目录下会生成一个名为
<code>&lt;title&gt;.md</code>
的文件，这就是我们的草稿。我们可以像正常编写文章一样去编写操作。</p>
<p><img src="https://jack-1307599355.cos.ap-shanghai.myqcloud.com/image-20250628184007331.png" alt="通过hexo new draft创建一个草稿" style="zoom:33%;"></p>
<p><code>hexo generate</code>
时会忽略<code>source/_drafts</code>目录下的文件，因此<code>source/_drafts</code>目录下的文件不会被编译并输出到<code>public</code>
目录下，所以 <code>hexo deploy</code> 也不会将其部署到 GitHub。</p>
<h3 id="查看草稿">2.2 查看草稿</h3>
<p>我们可以在运行<code>hexo server</code>命令的时候指定<code>--darft</code>参数，来查看草稿：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo server <span class="token parameter variable">--draft</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><code>--draft</code>参数会强制<code>hexo server</code>渲染
<code>source/_drafts</code>
目录下的草稿，因此我们可以在浏览器中查看草稿的内容。</p>
<figure>
<img src="https://jack-1307599355.cos.ap-shanghai.myqcloud.com/image-20250628184620176.png" alt="通过--draft参数查看草稿">
<figcaption aria-hidden="true">通过--draft参数查看草稿</figcaption>
</figure>
<h3 id="将草稿发布为正式文章">2.3 将草稿发布为正式文章</h3>
<p>当我们编写好文章之后，只需要将草稿从<code>_drafts</code>目录移动到<code>_posts</code>目录即可：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mv</span> source/_drafts/<span class="token operator">&lt;</span>filename<span class="token operator">&gt;</span>.md source/_posts/<span class="token operator">&lt;</span>filename<span class="token operator">&gt;</span>.md<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="front-matter">3. Front-matter</h2>
<p><code>Front-matter</code> 是一种 <code>Markdown</code>
文件的元数据，通常位于文件的开头，用来定义文章的属性和配置，是
<code>Hexo</code>、<code>Jekyll</code>
等静态网站生成器中非常重要的部分，能够帮助我们快速设置文章的标题、日期、分类、标签等信息。</p>
<h3 id="front-matter选项">3.1 Front-matter选项</h3>
<p><code>Hexo Matery</code>主题中提供了如下的<code>Front-matter</code>
选项，所有内容均为<strong>非必填</strong>的。</p>
<table>
<colgroup>
<col style="width: 5%">
<col style="width: 13%">
<col style="width: 81%">
</colgroup>
<thead>
<tr>
<th>配置选项</th>
<th>默认值</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>title</td>
<td><code>Markdown</code> 的文件标题</td>
<td>文章标题，强烈建议填写此选项</td>
</tr>
<tr>
<td>date</td>
<td>文件创建时的日期时间</td>
<td>发布时间，强烈建议填写此选项，且最好保证全局唯一</td>
</tr>
<tr>
<td>author</td>
<td>根 <code>_config.yml</code> 中的 <code>author</code></td>
<td>文章作者</td>
</tr>
<tr>
<td>img</td>
<td><code>featureImages</code> 中的某个值</td>
<td>文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如:
<code>http://xxx.com/xxx.jpg</code></td>
</tr>
<tr>
<td>top</td>
<td><code>true</code></td>
<td>推荐文章（文章是否置顶），如果 <code>top</code> 值为
<code>true</code>，则会作为首页推荐文章</td>
</tr>
<tr>
<td>hide</td>
<td><code>false</code></td>
<td>隐藏文章，如果<code>hide</code>值为<code>true</code>，则文章不会在首页显示</td>
</tr>
<tr>
<td>cover</td>
<td><code>false</code></td>
<td><code>v1.0.2</code>版本新增，表示该文章是否需要加入到首页轮播封面中</td>
</tr>
<tr>
<td>coverImg</td>
<td>无</td>
<td><code>v1.0.2</code>版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td>
</tr>
<tr>
<td>password</td>
<td>无</td>
<td>文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置
<code>password</code> 的值，该值必须是用 <code>SHA256</code>
加密后的密码，防止被他人识破。前提是在主题的 <code>config.yml</code>
中激活了 <code>verifyPassword</code> 选项</td>
</tr>
<tr>
<td>toc</td>
<td><code>true</code></td>
<td>是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的
<code>config.yml</code> 中激活了 <code>toc</code> 选项</td>
</tr>
<tr>
<td>mathjax</td>
<td><code>false</code></td>
<td>是否开启数学公式支持 ，本文章是否开启
<code>mathjax</code>，且需要在主题的 <code>_config.yml</code>
文件中也需要开启才行</td>
</tr>
<tr>
<td>summary</td>
<td>无</td>
<td>文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td>
</tr>
<tr>
<td>categories</td>
<td>无</td>
<td>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td>
</tr>
<tr>
<td>tags</td>
<td>无</td>
<td>文章标签，一篇文章可以多个标签</td>
</tr>
<tr>
<td>keywords</td>
<td>文章标题</td>
<td>文章关键字，SEO 时需要</td>
</tr>
<tr>
<td>reprintPolicy</td>
<td>cc_by</td>
<td>文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc,
cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个</td>
</tr>
</tbody>
</table>
<blockquote>
<p><strong>注意</strong>:</p>
<ol type="1">
<li>如果 <code>img</code> 属性不填写的话，文章特色图会根据文章标题的
<code>hashcode</code>
的值取余，然后选取主题中对应的特色图片，从而达到让所有文章的特色图<strong>各有特色</strong>。</li>
<li><code>date</code> 的值尽量保证每篇文章是唯一的，因为本主题中
<code>Gitalk</code> 和 <code>Gitment</code> 识别 <code>id</code> 是通过
<code>date</code> 的值来作为唯一标识的。</li>
<li>如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter
中设置采用了 SHA256 加密的 password 的值，还需要在主题的
<code>_config.yml</code> 中激活了配置。有些在线的 SHA256
加密的地址，可供你使用：<a href="http://tool.oschina.net/encrypt?type=2">开源中国在线工具</a>、<a href="http://encode.chahuo.com/">chahuo</a>、<a href="http://tool.chinaz.com/tools/hash.aspx">站长工具</a>。</li>
<li>您可以在文章md文件的 front-matter 中指定 reprintPolicy
来给单个文章配置转载规则</li>
</ol>
</blockquote>
<h3 id="最简示例">3.2 最简示例</h3>
<p>最简单的文章只需要填写<code>title</code>和<code>date</code>字段</p>
<pre class="line-numbers language-none"><code class="language-none">---
title: typora-vue-theme主题介绍
date: 2018-09-07 09:25:00
---

正文内容

...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="最全示例">3.3 最全示例</h3>
<p>这是比较完整的示例，</p>
<pre class="line-numbers language-none"><code class="language-none">---
title: typora-vue-theme主题介绍
date: 2018-09-07 09:25:00
author: 赵奇
img: /source/images/xxx.jpg
top: true
hide: false
cover: true
coverImg: /images/1.jpg
password: 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92
toc: false
mathjax: false
summary: 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要
categories: Markdown
tags:
  - Typora
  - Markdown
---

正文内容

...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script><link rel="stylesheet" href="https://fastly.jsdelivr.net/npm/markmap-toolbar@0.18.10/dist/style.css"><script src="https://fastly.jsdelivr.net/npm/d3@7"></script><script src="https://fastly.jsdelivr.net/npm/markmap-view@0.18.10"></script><script src="https://fastly.jsdelivr.net/npm/markmap-toolbar@0.18.10"></script>
<link rel="stylesheet" href="/css/markmap.css">

<script src="/js/markmap.js"></script>
]]></content>
      <categories>
        <category>Hexo博客编写</category>
      </categories>
      <tags>
        <tag>markdown</tag>
        <tag>hexo</tag>
        <tag>写作</tag>
      </tags>
  </entry>
</search>
